// Mocks generated by Mockito 5.4.4 from annotations
// in stocks_price_tracker/test/unit_tests/bloc/stocks_list_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:stocks_price_tracker/domain/model/stock_model.dart' as _i4;
import 'package:stocks_price_tracker/domain/stocks_repository.dart' as _i10;
import 'package:stocks_price_tracker/domain/use_case/close_live_updates_connection_use_case.dart'
    as _i6;
import 'package:stocks_price_tracker/domain/use_case/connect_to_live_updates_use_case.dart'
    as _i5;
import 'package:stocks_price_tracker/domain/use_case/get_price_updates_use_case.dart'
    as _i9;
import 'package:stocks_price_tracker/domain/use_case/get_stocks_use_case.dart'
    as _i2;
import 'package:stocks_price_tracker/domain/use_case/subscribe_to_stock_use_case.dart'
    as _i7;
import 'package:stocks_price_tracker/domain/use_case/unsubscribe_from_stock_use_case.dart'
    as _i8;
import 'package:stocks_price_tracker/network/ws_manager.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetStocksUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStocksUseCase extends _i1.Mock implements _i2.GetStocksUseCase {
  @override
  _i3.Future<List<_i4.StockModel>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Future<List<_i4.StockModel>>.value(<_i4.StockModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.StockModel>>.value(<_i4.StockModel>[]),
      ) as _i3.Future<List<_i4.StockModel>>);
}

/// A class which mocks [ConnectToLiveUpdatesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectToLiveUpdatesUseCase extends _i1.Mock
    implements _i5.ConnectToLiveUpdatesUseCase {
  @override
  void call() => super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CloseLiveUpdatesConnectionUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloseLiveUpdatesConnectionUseCase extends _i1.Mock
    implements _i6.CloseLiveUpdatesConnectionUseCase {
  @override
  void call() => super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SubscribeToStockUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscribeToStockUseCase extends _i1.Mock
    implements _i7.SubscribeToStockUseCase {
  @override
  void call(String? symbol) => super.noSuchMethod(
        Invocation.method(
          #call,
          [symbol],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UnsubscribeFromStockUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUnsubscribeFromStockUseCase extends _i1.Mock
    implements _i8.UnsubscribeFromStockUseCase {
  @override
  void call(String? symbol) => super.noSuchMethod(
        Invocation.method(
          #call,
          [symbol],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GetPriceUpdatesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPriceUpdatesUseCase extends _i1.Mock
    implements _i9.GetPriceUpdatesUseCase {
  @override
  void call({
    _i10.OnLivePriceUpdateReceived? onMessageReceived,
    _i11.OnErrorReceived? onErrorReceived,
    _i11.OnComplete? onComplete,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #onMessageReceived: onMessageReceived,
            #onErrorReceived: onErrorReceived,
            #onComplete: onComplete,
          },
        ),
        returnValueForMissingStub: null,
      );
}
